// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ResquePet.Data;

#nullable disable

namespace ResquePet.Migrations
{
    [DbContext(typeof(VeterinarioContext))]
    partial class VeterinarioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ResquePet.Models.Animale", b =>
                {
                    b.Property<int>("IdAnimale")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAnimale"));

                    b.Property<int?>("IdUtente")
                        .HasColumnType("int");

                    b.Property<int?>("MicrochipID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("coloreMantello")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("dataNascita")
                        .HasColumnType("date");

                    b.Property<bool>("isMicrochipped")
                        .HasColumnType("bit");

                    b.Property<string>("tipoAnimale")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAnimale");

                    b.HasIndex("IdUtente")
                        .IsUnique()
                        .HasFilter("[IdUtente] IS NOT NULL");

                    b.ToTable("animale");
                });

            modelBuilder.Entity("ResquePet.Models.Utente", b =>
                {
                    b.Property<int>("IdUtente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUtente"));

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUtente");

                    b.ToTable("Utente");
                });

            modelBuilder.Entity("ResquePet.Models.Animale", b =>
                {
                    b.HasOne("ResquePet.Models.Utente", "utente")
                        .WithOne("animale")
                        .HasForeignKey("ResquePet.Models.Animale", "IdUtente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("utente");
                });

            modelBuilder.Entity("ResquePet.Models.Utente", b =>
                {
                    b.Navigation("animale");
                });
#pragma warning restore 612, 618
        }
    }
}
